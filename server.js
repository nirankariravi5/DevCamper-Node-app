const path=require('path')
const express=require('express')
const dotenv=require('dotenv')
const morgan=require('morgan')
const colors=require('colors')
const errorHandler=require('./middleware/error')
const connectDB=require('./config/db')
dotenv.config({path: './config/config.env'})
const helmet=require('helmet')
const xss=require('xss-clean')
const mongoSanitize=require('express-mongo-sanitize')
const rateLimit=require('express-rate-limit')
const hpp=require('hpp')
const cors=require('cors')
const bootcamps=require('./routes/bootcamps')
const courses=require('./routes/courses')
const auth=require('./routes/auth')
const users=require('./routes/users')
const reviews=require('./routes/reviews')
const fileupload=require('express-fileupload')
const cookieParser=require('cookie-parser')
const PORT= process.env.PORT||5000
const app=express()
app.use(express.json())

connectDB()
if(process.env.NODE_ENV==='development'){
app.use(morgan('dev'))
}
app.use(fileupload())
app.use(helmet())
app.use(mongoSanitize())
app.use(xss())
const limiter=rateLimit({
    windowMs:10*60*1000,
    max:100
})
app.use(limiter)
app.use(hpp())
app.use(cors())
app.use(express.static(path.join(__dirname,'public')))
app.use(cookieParser())
app.use('/api/v1/bootcamps',bootcamps)
app.use('/api/v1/courses',courses)
app.use('/api/v1/auth',auth)
app.use('/api/v1/users',users)
app.use('/api/v1/reviews',reviews)


app.use(errorHandler)
const server=app.listen(PORT,console.log(('Server is running in '+process.env.NODE_ENV+' mode on '+PORT).yellow.bold))
process.on('unhandledRejection',(err,promise)=>{
    console.log(("Error : "+err.message).red.bold)
    server.close(()=>process.exit(1))
})